name: Jobs

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Checkout Code & Install Dependencies
        uses: ./.github/actions/checkout-and-setup
        with:
          node-version: "18"

      - name: Build with SWC
        run: yarn build

      - name: Cache Dist Folder
        uses: actions/cache@v3
        with:
          path: dist/
          key: ${{ runner.os }}-dist-${{ github.run_id }}

  configure-aws:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

  deploy:
    runs-on: ubuntu-latest
    environment: dev
    needs: [build, configure-aws]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore Cached Dist Folder
        uses: actions/cache@v3
        with:
          path: dist/
          key: ${{ runner.os }}-dist-${{ github.run_id }}

      - name: Build Docker image
        run: |
          docker build -t server-template:latest -f Dockerfile.api .

      - name: Tag and push Docker image to ECR
        run: |
          docker tag server-template:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/test/server-template:latest
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/test/server-template:latest

      - name: Update Lambda function code
        run: |
          aws lambda update-function-code \
            --function-name secondServerTemplateFn \
            --image-uri ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/test/server-template:latest \
            --architectures x86_64
